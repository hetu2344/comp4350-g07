# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Restro Sync CI

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]

jobs:
  build-frontend:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "23"
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - name: List frontend directory contents
        working-directory: frontend
        run: ls -la
      - name: Install dependencies (frontend)
        working-directory: frontend
        run: npm ci
      - name: Build (frontend)
        working-directory: frontend
        run: npm run build --if-present
      - name: Test (frontend)
        working-directory: frontend
        #run: npm run test --if-present

  build-backend:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "23"
          cache: npm
          cache-dependency-path: backend/package-lock.json
      - name: Install dependencies (backend)
        working-directory: backend
        run: npm ci
      - name: Build (backend)
        working-directory: backend
        run: npm run build --if-present
      - name: Test (backend)
        working-directory: backend
        run: npm test -- tests/unit

  deploy:
    runs-on: ubuntu-latest
    #needs: [build-frontend, build-backend] # Uncomment if builds should run on push too
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4 # Keep: Needed for files
      - name: Login to Docker Hub
        uses: docker/login-action@v2 # Keep: Needed for push
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
      - name: Build and Push with Docker Compose
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push
