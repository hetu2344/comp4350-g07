# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
name: Restro Sync CI

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]

jobs:
  build-and-test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - uses: actions/checkout@v4

      # Install Docker and Docker Compose
      - name: Install Docker
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          sudo usermod -aG docker $USER
          newgrp docker
          docker --version

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Build the Docker containers
      - name: Build Docker containers
        run: make up-build

      # Wait for PostgreSQL to be ready
      - name: Wait for Test Database to be Ready
        run: |
          echo "Waiting for PostgreSQL service..."
          until docker exec restro_sync_test_db pg_isready -U restro_usr -d restro_sync; do
            echo "Postgres not ready yet..."
            sleep 2
          done
          echo "PostgreSQL is ready!"

      # Clean Test Database
      - name: Clean Test Database
        run: |
          docker exec -i restro_sync_test_db psql -U restro_usr -d restro_sync -c "DROP SCHEMA public CASCADE; CREATE SCHEMA public;"

      # Run Tests (Jest and Cypress)
      - name: Run All Tests
        run: make run-all-tests

      # Tear down services
      - name: Tear down services
        run: make down

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build and Push with Docker Compose
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push
